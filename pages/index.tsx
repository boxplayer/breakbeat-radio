import type { NextPage } from "next";
import { useEffect, useState } from "react";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { YouTubeEmbed } from "../components/YouTubeEmbed";
import { MediaButtons } from "../components/MediaButtons";
import { SocialMediaButtons } from "../components/SocialMediaButtons";
import { NowPlaying } from "../components/NowPlaying";
import { getRandomTrackId } from "../components/RandomTrackButton";

const GifTitles = [
  "pc98-retro-game",
  "arcade-gameover",
  "pool-girl",
  "runescape-dance",
];

export const TrackIds = [
  "8CHva3gBp68&t",
  "zSCzORZQsjQ",
  "A9UW7i6Pj3Q",
  "Owldd4hs7wQ&t",
  "8diCWQ5HU0I",
  "wMFfy9-VS6Y",
  "pCGmlm8HvBI",
  "DrmpZtxr0kY",
  "qXfdneeIZnw",
  "83YU83Q0jXA",
  "yEUOXeTccSk",
  "ulU8B-FdABA",
  "u9o1OYX5UOQ",
  "xgvpvO2Fx8U",
  "MUoCWXwPUIM",
  "9dKSf8IlXNM",
  "vRZHyKnCPZU",
  "0KaBYaQGwbs",
  "3O3vncqnFWY",
  "0KgL3FwzjBE",
  "T_-jjh2sX4Q",
  "j3l2t7H03k",
  "geL0UVnSfvQ",
  "knsIkEY4zoI",
  "pbXLQ2qvedU",
  "z70z6BS4CfE",
  "CtCgNRquauE",
  "0HXTXQ--dBA",
  "kmLT1NvsI4Y",
  "twBcMibg1Vs",
  "pC-hxUhVLEc",
  "r8SASJoZNow",
];

const Home: NextPage = () => {
  const [introMessage, setIntroMessage] = useState(true);
  const [playing, setPlaying] = useState(false);
  const [volume, setVolume] = useState(0.6);
  const [currentTrack, setCurrentTrack] = useState(getRandomTrackId(TrackIds));
  const [currentGifIndex, setCurrentGifIndex] = useState(0);

  //TODO: export these to reusable functions
  useEffect(() => {
    function handleKeyDown(e: KeyboardEvent): any {
      if (e.code === "Space" && introMessage === true) {
        e.preventDefault();
        setIntroMessage(false);
      }

      if (e.code === "Space") {
        e.preventDefault();
        setPlaying((prevProps) => !prevProps);
      }

      if (e.code === "ArrowUp") {
        e.preventDefault();
        if (volume <= 0.8) {
          setVolume((prevProps) => prevProps + 0.2);
        }
      }

      if (e.code === "ArrowDown") {
        e.preventDefault();
        if (volume > 0) {
          setVolume((prevProps) => prevProps - 0.2);
        }
      }

      if (e.code === "ArrowLeft") {
        e.preventDefault();
        const currentTrackIndex = TrackIds.indexOf(currentTrack);
        if (currentTrackIndex === 0) {
          setCurrentTrack(TrackIds[TrackIds.length - 1]);
        } else {
          setCurrentTrack(TrackIds[currentTrackIndex - 1]);
        }
      }

      if (e.code === "ArrowRight") {
        e.preventDefault();

        const currentTrackIndex = TrackIds.indexOf(currentTrack);
        if (currentTrackIndex === TrackIds.length) {
          setCurrentTrack(TrackIds[0]);
        } else {
          setCurrentTrack(TrackIds[currentTrackIndex + 1]);
        }
      }

      if (e.code === "KeyR") {
        setCurrentTrack(getRandomTrackId(TrackIds));
      }

      if (e.code === "KeyG") {
        setCurrentGifIndex(
          currentGifIndex === GifTitles.length - 1 ? 0 : currentGifIndex + 1,
        );
      }
    }

    document.addEventListener("keydown", handleKeyDown);

    return function cleanup() {
      document.removeEventListener("keydown", handleKeyDown);
    };
  }, [playing, introMessage, volume, currentTrack, currentGifIndex]);

  {
    /* <div className={`bg-cover z-10 bg-[url('/gifs/arcade-gameover.gif')]`}> */
    {
      /* <div className={`bg-cover z-10 bg-[${gifPath}]`}> */
    }
  }
  const gifPath = `url('/gifs/${GifTitles[currentGifIndex]}.gif')`;
  console.log(gifPath);

  return (
    <div className={`bg-cover z-10 bg-[${gifPath}]`}>
      <Head>
        <title>BREAKBEAT RADIO</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={"min-h-screen flex flex-col justify-between"}>
        <div className={"fixed hidden items-center justify-center"}>
          <YouTubeEmbed videoId={currentTrack} play={playing} volume={volume} />
        </div>

        <div className={`${styles.row} justify-between pt-3 p-8`}>
          <h1 className={styles.title}>BREAKBEAT RADIO</h1>
          <SocialMediaButtons />
        </div>

        <div className={`${styles.row} text-white align-center pb-3 p-8`}>
          {introMessage ? (
            <p className={`text-2xl`}> Press space to start playing...</p>
          ) : (
            <div>
              <div className={styles.row}>
                <MediaButtons
                  volume={volume}
                  setVolume={setVolume}
                  playing={playing}
                  setPlaying={setPlaying}
                  currentTrack={currentTrack}
                  setCurrentTrack={setCurrentTrack}
                />
              </div>
              <div className={`${styles.row} items-end mt-2`}>
                <NowPlaying playing={playing} videoId={currentTrack} />
              </div>
            </div>
          )}
        </div>
      </main>
    </div>
  );
};

export default Home;
